{"ast":null,"code":"var _jsxFileName = \"/Users/Elena/Documents/ReactPaintApp/react-paint-app/client/src/components/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/canvas.scss';\nimport { observer } from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = _s(observer(_c = _s(() => {\n  _s();\n  const canvasRef = useRef();\n  const usernameRef = useRef();\n  const [isShowModal, setIsShowModal] = useState(true);\n  const params = useParams();\n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n  }, []);\n  useEffect(() => {\n    if (canvasState.username.length > 0) {\n      const socket = new WebSocket('ws://localhost:5000/');\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id);\n      toolState.setTool(new Brush(canvasRef.current, socket, params.id));\n      socket.onopen = () => {\n        console.log(\"Canvas connect\");\n        socket.send(JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: \"connection\"\n        }));\n      };\n      socket.onmessage = event => {\n        let msg = JSON.parse(event.data);\n        switch (msg.method) {\n          case \"connection\":\n            console.log(`Пользователь ${msg.username} подключился`);\n            break;\n          case \"draw\":\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n  const drawHandler = msg => {\n    const figure = msg.figure;\n    const ctx = canvasRef.current.getContext('2d');\n    switch (figure.type) {\n      case \"brush\":\n        Brush.draw(ctx, figure.x, figure.y);\n        break;\n      case \"rect\":\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color);\n        break;\n      case \"finish\":\n        ctx.beginPath();\n        break;\n    }\n  };\n  const handleMouseDown = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n  };\n  const handleClickButton = () => {\n    connectHandler();\n  };\n  const connectHandler = () => {\n    canvasState.setUsername(usernameRef.current.value);\n    setIsShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: isShowModal,\n      onHide: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClickButton,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: 600,\n      height: 400,\n      ref: canvasRef,\n      onMouseDown: handleMouseDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}, \"yuV2stRAaeQLLp6yBByhtS8qzYM=\", false, function () {\n  return [useParams];\n})), \"yuV2stRAaeQLLp6yBByhtS8qzYM=\", false, function () {\n  return [useParams];\n});\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","observer","canvasState","toolState","Brush","Button","Modal","useParams","Rect","Canvas","canvasRef","usernameRef","isShowModal","setIsShowModal","params","setCanvas","current","username","length","socket","WebSocket","setSocket","setSessionId","id","setTool","onopen","console","log","send","JSON","stringify","method","onmessage","event","msg","parse","data","drawHandler","figure","ctx","getContext","type","draw","x","y","staticDraw","width","height","color","beginPath","handleMouseDown","pushToUndo","toDataURL","handleClickButton","connectHandler","setUsername","value"],"sources":["/Users/Elena/Documents/ReactPaintApp/react-paint-app/client/src/components/Canvas.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport '../styles/canvas.scss';\nimport {observer} from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\n\nconst Canvas = observer(() => {\n    const canvasRef = useRef();\n    const usernameRef = useRef();\n    const [isShowModal, setIsShowModal] = useState(true);\n    const params = useParams();\n\n    useEffect(()=> {\n        canvasState.setCanvas(canvasRef.current);\n    }, []);\n\n    useEffect(()=> {\n        if (canvasState.username.length > 0) {\n            const socket = new WebSocket('ws://localhost:5000/');\n            canvasState.setSocket(socket);\n            canvasState.setSessionId(params.id);\n            toolState.setTool(new Brush(canvasRef.current, socket, params.id));\n\n            socket.onopen = () => {\n                console.log(\"Canvas connect\");\n                socket.send(JSON.stringify({\n                    id: params.id,\n                    username: canvasState.username,\n                    method: \"connection\"\n                }))\n            };\n            socket.onmessage = (event) => {\n                let msg = JSON.parse(event.data);\n                switch (msg.method) {\n                    case \"connection\":\n                        console.log(`Пользователь ${msg.username} подключился`);\n                        break;\n\n                    case \"draw\":\n                        drawHandler(msg);\n                        break;\n                }\n            };\n        }\n    }, [canvasState.username]);\n\n    const drawHandler = (msg) => {\n        const figure = msg.figure;\n        const ctx = canvasRef.current.getContext('2d');\n        switch (figure.type) {\n            case \"brush\":\n                Brush.draw(ctx, figure.x, figure.y);\n                break;\n\n            case \"rect\":\n                Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color);\n                break;\n\n            case \"finish\":\n                ctx.beginPath();\n                break;\n        }\n    };\n\n    const handleMouseDown = () => {\n        canvasState.pushToUndo(canvasRef.current.toDataURL());\n    };\n\n    const handleClickButton = () => {\n        connectHandler();\n    };\n\n    const connectHandler = () => {\n        canvasState.setUsername(usernameRef.current.value);\n        setIsShowModal(false);\n    };\n\n\n    return (\n        <div className=\"canvas\">\n            <Modal show={isShowModal} onHide={() => {}}>\n                <Modal.Header>\n                    <Modal.Title>Введите Ваше имя</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <input type=\"text\" ref={usernameRef}/>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClickButton}>\n                        Войти\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <canvas width={600}\n                    height={400}\n                    ref={canvasRef}\n                    onMouseDown={handleMouseDown}/>\n        </div>\n    );\n});\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}